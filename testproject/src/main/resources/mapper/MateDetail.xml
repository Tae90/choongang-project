<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.MateDetailDAO">
	<!-- 게시글 정보 가져오기 -->
	<select id="getrecruitD" parameterType="int" resultType="recruit">
		select * from recruit where recruit_no = #{recruit_no}
	</select>
	<!-- 게시글의 좌표값 가져오기 -->
	<select id="getrecruitC" parameterType="int" resultType="recruit_c">
		select * from recruit_c where recruit_no = #{recruit_no}
		order by recruit_c_no
	</select>
	<!-- 세션값 설정을 위한 membetDTO생성 -->
	<select id="getMember_SJL" parameterType="String" resultType="runner">
		select * from runner where user_id=#{user_id}
	</select>
	<!-- 글쓴이의 프사 가져오기 -->
	<select id="getUserPhotoB" parameterType="int" resultType="string">
		select r.user_photo from recruit e join runner r on e.user_id = r.user_id
		where e.recruit_no = #{recruit_no}
	</select>
	<!-- 글쓴이의 닉네임 가져오기 -->
	<select id="getNickNameB" parameterType="int" resultType="String">
		select r.user_nickname from recruit e join runner r on e.user_id = r.user_id
		where e.recruit_no = #{recruit_no}
	</select>

	<!-- 참가 신청 -->
	<insert id="getapply" parameterType="apply">
		insert into apply (apply_no,
		recruit_no, user_id, apply_date, apply_del)
		values (apply_seq.nextval,
		#{recruit_no}, #{user_id}, sysdate, #{apply_del})
	</insert>
	<!-- 참가 신청 알림 -->
	<insert id="getalarmB" parameterType="alarm">
		insert into alarm (alarm_no, user_id, recruit_no, alarm_content, alarm_date, alarm_subject)
		values (alarm_seq.nextval, #{user_id}, #{recruit_no}, #{alarm_content}, sysdate, #{alarm_subject})
	</insert>
	<!-- 참가 신청 취소 -->
	<update id="getcancelapply" parameterType="apply">
		update apply set apply_del = #{apply_del}, apply_date = sysdate
		where recruit_no = #{recruit_no} and user_id = #{user_id}
	</update>
	
	<!-- 신청 취소 알림 -->
	<insert id="getcancelalarm" parameterType="alarm">
		insert into alarm (alarm_no, user_id, recruit_no, alarm_content, alarm_date, alarm_subject)
		values (alarm_seq.nextval, #{user_id}, #{recruit_no}, #{alarm_content}, sysdate, #{alarm_subject})
	</insert>
		
	<!-- 글 작성한 사람의 ID 조회 -->
	<select id="getWriter_id" parameterType="int" resultType="String">
    	select user_id from recruit where recruit_no = #{recruit_no}
	</select>
	
	<!-- 중복 신청 방지를 위한 참가 후 참가 버튼 비활성화 -->
	<select id="isAlreadyApplied" parameterType="map" resultType="int">
    select count(*) from apply where recruit_no = #{recruit_no} and
    		user_id = #{user_id} and apply_del = 0
	</select>
	
	<select id="getRemainNum" parameterType="int" resultType="int">
    select recruit_remainnum from recruit where recruit_no = #{recruit_no}
	</select>

	<update id="updateRemainNum" parameterType="map">
    update recruit set recruit_remainnum = #{remainNum} where recruit_no = #{recruit_no}
	</update>
	
</mapper>